select(articles.source_name, topic, topic_prob) %>%
drop_na() %>%
group_by(articles.source_name, topic) %>%
summarise(prob_avg = mean(topic_prob)) %>%
pivot_wider(names_from = topic, values_from = topic_prob)
articles %>%
pivot_longer(cols = contains("topic"),
names_to = "topic",
values_to = "topic_prob") %>%
select(articles.source_name, topic, topic_prob) %>%
drop_na() %>%
group_by(articles.source_name, topic) %>%
summarise(prob_avg = mean(topic_prob)) %>%
pivot_wider(names_from = topic, values_from = prob_avg)
# Assess bias in topic probabibilities
articles_topic_prob <- articles %>%
pivot_longer(cols = contains("topic"),
names_to = "topic",
values_to = "topic_prob") %>%
select(articles.source_name, topic, topic_prob) %>%
drop_na() %>%
group_by(articles.source_name, topic) %>%
summarise(prob_avg = mean(topic_prob))
articles_topic_prob
# contigency table
# rescale to integers
topic_prob_sc <- articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100), 0)
topic_prob_sc
# contigency table
# rescale to integers
topic_prob_sc <- articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
topic_prob_sc
# contigency table
# rescale to integers
topic_prob_sc <- articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>%
select(-prob_avg)
topic_cont <- table(topic_prob_sc$articles.source_name,
topic_prob_sc$topic)
topic_cont
topic_prob_sc
# contigency table
# rescale to integers
topic_prob_sc <- articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
topic_prob_sc
topic_prob_sc %>% group_by(topic) %>% summarise(sum_check = sum(topic_prob_sc))
# Assess bias in topic probabibilities
articles_topic_prob <- articles %>%
select(articles.source_name | contains("topic")) %>%
pivot_longer(cols = -articles.source_name) %>%
drop_na() %>%
group_by(name, articles.source_name) %>%
summarise(topic_prob = mean(value))
articles_topic_prob
articles_topic_prob %>% group_by(name) %>% summarise(sum_check = sum(topic_prob))
# Assess bias in topic probabibilities
articles_topic_prob <- articles %>%
pivot_longer(cols = contains("topic"),
names_to = "topic",
values_to = "topic_prob") %>%
select(articles.source_name, topic, topic_prob) %>%
drop_na() %>%
group_by(articles.source_name, topic) %>%
summarise(prob_avg = mean(topic_prob))
articles_topic_prob
# contigency table
# rescale to integers
topic_prob_sc <- articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
topic_prob_sc
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>%
pivot_wider(names_from = topic, values_from = topic_prob_sc)
rticles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>% print(n = 50)
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>%
pivot_wider(names_from = topic, values_from = topic_prob_sc)
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>%
pivot_wider(names_from = topic, values_from = topic_prob_sc) %>%
drop_na()
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0))
articles_topic_prob %>%
mutate(topic_prob_sc = round(prob_avg * 100, 0)) %>%
pivot_wider(names_from = topic, values_from = topic_prob_sc)
articles %>%
select(articles.source_name | contains("topic"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(cols = -articles.source_name), mean)
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(cols = -articles.source_name), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(-articles.source_name, mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name)
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(-articles.source_name, mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>% colnames
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(contains("prob"), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
summarise(across(contains("prob"), mean)) %>% print(n = 50)
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na()
summarise(across(contains("prob"), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na()
summarise(across(contains("prob"), mean, "{.col}_{sc}"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na()
summarise(across(contains("prob"), mean, names = "{.col}_{sc}"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na()
summarise(across(contains("prob"), mean, names = "{.col}_{.fun}"))
rticles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na()
summarise(across(contains("prob"), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean, "{.cols}_{sc}"))
rticles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean, "{.col}_{sc}"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean, "{.col}_{sc}"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean, "{.col}_{.fn}"))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(across(contains("prob"), mean * 10))
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise((across(contains("prob"), mean))*100)
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
articles_topic_prob_sc
articles_topic_prob_sc
articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0) %>%
t()
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
rownames(articles_topic_prob_sc) <- articles_topic_prob_sc$articles.source_name
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- as.table(articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0))
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- as.matrix(articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0))
articles_topic_prob_sc
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
# convert to matrix
articles_topic_prob_sc %>% select(-articles.source_name) %>% as.matrix
articles_topic_prob_sc %>%
select(-articles.source_name) %>%
as.table
articles_topic_prob_sc %>%
select(-articles.source_name) %>%
as.matrix
# convert to matrix
articles_sc_mat <- articles_topic_prob_sc %>%
select(-articles.source_name) %>%
as.matrix
rownames(articles_sc_mat) <- articles_topic_prob_sc$articles.source_name
articles_sc_mat
as.table(articles_sc_mat)
articles_sc_mat <- as.table(articles_sc_mat)
chisq.test(articles_sc_mat)
articles_sc_mat
articles_sc_mat
dim(articles_sc_mat)
articles_sc_mat[ , -1]
colnames(articles_sc_mat)
colnames(articles_sc_mat[ , -"0"])
colnames(articles_sc_mat[ , 1:ncol(articles_sc_mat)])
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100), 0)
articles_topic_prob_sc
# Assess bias in topic probabibilities
# rescale to integers for Chi-Square test
articles_topic_prob_sc <- articles %>%
select(articles.source_name | contains("topic")) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(round((across(contains("prob"), mean))*100, 0))
# convert to matrix
articles_sc_mat <- articles_topic_prob_sc %>%
select(-articles.source_name) %>%
as.matrix
# provide row names
rownames(articles_sc_mat) <- articles_topic_prob_sc$articles.source_name
# convert to table
articles_sc_mat <- as.table(articles_sc_mat)
articles_sc_mat
chisq.test(articles_sc_mat)
# conduct chi-square test
print(chisq.test(articles_sc_mat))
library(gplots)
# balloon plot
balloonplot(t(articles_sc_mat), main = "Topic Probabilities")
# balloon plot
balloonplot(t(articles_sc_mat), main = "Topic Probabilities")
# balloon plot
balloonplot(articles_sc_mat, main = "Topic Probabilities")
# balloon plot
balloonplot(t(articles_sc_mat), main = "Topic Probabilities")
# balloon plot
balloonplot(articles_sc_mat, main = "Topic Probabilities")
# balloon plot
balloonplot(articles_sc_mat, main = "Topic Probabilities",
xlab = "Topic", y = "News Source")
# conduct chi-square test
print(chisq.test(articles_sc_mat))
articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg(avg_sentiment_afinn_sent))
articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(mean(avg_sentiment_afinn_sent))
articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg_sentiment = mean(avg_sentiment_afinn_sent)) %>%
mutate(avg_sentiment_sc = round(avg_sentiment * 100, 0))
articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg_sentiment = mean(avg_sentiment_afinn_sent)) %>%
mutate(avg_sentiment_sc = -round(avg_sentiment * 100, 0))
vg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg_sentiment = mean(avg_sentiment_afinn_sent)) %>%
mutate(avg_sentiment_sc = -round(avg_sentiment * 100, 0))
articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg_sentiment = mean(avg_sentiment_afinn_sent)) %>%
mutate(avg_sentiment_sc = -round(avg_sentiment * 100, 0))
# Assess bias in topic probabibilities
# rescale to non-negative integers for Chi-Square test
articles_sentiment_sc <- articles %>%
select(articles.source_name, avg_sentiment_afinn_sent) %>%
group_by(articles.source_name) %>%
drop_na() %>%
summarise(avg_sentiment = mean(avg_sentiment_afinn_sent)) %>%
mutate(avg_sentiment_sc = -round(avg_sentiment * 100, 0))
# convert to matrix
articles_sentiment_sc_mat <- articles_sentiment_sc_mat %>%
select(-articles.source_name) %>%
as.matrix
# convert to matrix
articles_sentiment_sc_mat <- articles_sentiment_sc %>%
select(-articles.source_name) %>%
as.matrix
articles_sentiment_sc_mat
# convert to matrix
articles_sentiment_sc_mat <- articles_sentiment_sc %>%
select(articles.source_name, avg_sentiment_sc) %>%
as.matrix
articles_sentiment_sc_mat
# convert to matrix
articles_sentiment_sc_mat <- articles_sentiment_sc %>%
select(-articles.source_name, avg_sentiment_sc) %>%
as.matrix
# convert to matrix
articles_sentiment_sc_mat <- articles_sentiment_sc %>%
select(avg_sentiment_sc) %>%
as.matrix
articles_sentiment_sc_mat
# plot differences
articles_sentiment_sc
# plot differences
articles_sentiment_sc %>%
ggplot(aes(x = articles.source_name, y = avg_sentiment)) %>%
geom_bar(stat = "identity")
# plot differences
articles_sentiment_sc %>%
ggplot(aes(x = articles.source_name, y = avg_sentiment)) +
geom_bar(stat = "identity")
# provide row names
rownames(articles_sentiment_sc_mat) <- articles_sentiment_sc$articles.source_name
# convert to table
articles_sentiment_sc_mat <- as.table(articles_sentiment_sc_mat)
# conduct chi-square test
print(chisq.test(articles_sentiment_sc_mat))
articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count))
articles_word_count %>%
ggplot(aes(x = articles.source_name, y = avg_word_count)) %>%
geom_bar(stat = "identity") %>%
labs(title = "Average Word Count per Article")
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count))
articles_word_count %>%
ggplot(aes(x = articles.source_name, y = avg_word_count)) %>%
geom_bar(stat = "identity") %>%
labs(title = "Average Word Count per Article")
articles_word_count %>%
ggplot(aes(x = articles.source_name, y = avg_word_count)) +
geom_bar(stat = "identity") +
labs(title = "Average Word Count per Article")
# plot average word count
p1 <- articles_word_count %>%
ggplot(aes(x = articles.source_name, y = avg_word_count)) +
geom_bar(stat = "identity") +
labs(title = "Average Word Count per Article")
ggsave(p1, paste0(figures_dir, "avg_word_count.ong", width = 10, height = 10))
ggsave(p1, paste0(figures_dir, "avg_word_count.png"), width = 10, height = 10)
# plot average word count
p1 <- articles_word_count %>%
ggplot(aes(x = articles.source_name, y = avg_word_count)) +
geom_bar(stat = "identity") +
labs(title = "Average Word Count per Article")
class(p1)
?ggsave
ggsave(plot = p1,
file = paste0(figures_dir, "avg_word_count.png"),
width = 10, height = 10)
chisq.test(articles_word_count)
articles_word_count
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = round(avg_word_count))
articles_word_count
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = round(avg_word_count, 0))
articles_word_count
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = as.integer(avg_word_count))
articles_word_count
?as.integer
as.integer(5.4)
as.integer(5.5)
as.integer(5.6)
as.integer(5.7)
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = round(avg_word_count, 0))
articles_word_count
# chi-square test
# convert to matrix
articles_word_count <- as.matrix(articles_word_count$avg_word_count_chi)
rownames(articles_word_count) <- articles_word_count$articles.source_name
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = round(avg_word_count, 0))
# chi-square test
# convert to matrix
articles_word_count_mat <- as.matrix(articles_word_count$avg_word_count_chi)
rownames(articles_word_count) <- articles_word_count$articles.source_name
articles_word_count <- articles %>%
select(articles.source_name, word_count) %>%
group_by(articles.source_name) %>%
summarise(avg_word_count = mean(word_count)) %>%
mutate(avg_word_count_chi = round(avg_word_count, 0))
# chi-square test
# convert to matrix
articles_word_count_mat <- as.matrix(articles_word_count$avg_word_count_chi)
rownames(articles_word_count_mat) <- articles_word_count$articles.source_name
chisq.test(articles_word_count_mat)
t <- chisq.test(articles_word_count_mat)
t$statistic
t$parameter
t$p.value
t$method
?chisq.test
t$data.name
t$observed
t$expected
t$residuals
t$stdres
# conduct chi-square test
print(chisq.test(articles_sc_mat))
setwd("C:/Users/apagta950/Documents/NYU/Courses/Spring 2021/MDML/Final Project/US-News-NLP/results")
knitr::opts_chunk$set(echo = TRUE)
librar(knitr)
library(knitr)
topics
?topics
library(knitr)
topics_ <- data.frame(topic_number = 1:7,
topic = c("Politics", "Reported deaths and cases",
"China / Wuhan", "Outbreaks and infections by country",
"Patients and Symptoms", "Vaccines and Research",
"Business and Economy"))
kable(topics_, caption = "Topics from LDA")
